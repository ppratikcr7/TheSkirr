# Generated by Django 2.2 on 2021-08-13 06:53

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdverseEffectForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=220, null=True, verbose_name=accounts.models.UserRegisterDetails)),
                ('first_name', models.CharField(blank=True, max_length=220, null=True, verbose_name=accounts.models.UserRegisterDetails)),
                ('last_name', models.CharField(blank=True, max_length=220, null=True, verbose_name=accounts.models.UserRegisterDetails)),
                ('city', models.CharField(blank=True, max_length=220, null=True, verbose_name=accounts.models.UserRegisterDetails)),
                ('dob', models.CharField(blank=True, max_length=220, null=True, verbose_name=accounts.models.UserRegisterDetails)),
                ('gender', models.CharField(blank=True, max_length=220, null=True, verbose_name=accounts.models.UserRegisterDetails)),
                ('age', models.CharField(blank=True, max_length=10, null=True)),
                ('add', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=10, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=10, null=True)),
                ('vac_id', models.CharField(blank=True, max_length=10, null=True)),
                ('preg_vac', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('med_pres', models.TextField(blank=True, null=True)),
                ('med_over_counter', models.TextField(blank=True, null=True)),
                ('diet_supp', models.TextField(blank=True, null=True)),
                ('herbal_rem', models.TextField(blank=True, null=True)),
                ('smoke', models.BooleanField(blank=True, null=True)),
                ('alcohol', models.BooleanField(blank=True, null=True)),
                ('med_allergy', models.TextField(blank=True, null=True)),
                ('spec_ill', models.TextField(blank=True, null=True)),
                ('chronic_health', models.TextField(blank=True, null=True)),
                ('form_comp_by', models.CharField(choices=[('Self', 'Self'), ('Relative', 'Relative'), ('Friend', 'Friend'), ('Guardian', 'Guardian'), ('Localhelp', 'Localhelp'), ('Districtofficial', 'Districtofficial'), ('Physician', 'Physician'), ('Anyotherdoctor/paramedicstaff/etc', 'Anyotherdoctor/paramedicstaff/etc'), ('Other', 'Other')], max_length=100)),
                ('form_comp_by_det', models.TextField(blank=True, null=True)),
                ('doc_for_adv_reacn', models.CharField(choices=[('State Health Clinic', 'State Health Clinic'), ('Family Physician', 'Family Physician'), ('District Health Centre', 'District Health Centre'), ('Poly clinic', 'Poly clinic'), ('Hospital', 'Hospital'), ('Primary Health Care Centre', 'Primary Health Care Centre'), ('None', 'None'), ('Other', 'Other')], max_length=100)),
                ('doctor_det', models.TextField(blank=True, null=True)),
                ('vac_name', models.BooleanField(blank=True, null=True)),
                ('vac_name_other', models.TextField(blank=True, null=True)),
                ('mfd', models.BooleanField(blank=True, null=True)),
                ('vac_reg_no', models.TextField(blank=True, null=True)),
                ('admin_route', models.CharField(choices=[('Intradermal', 'Intradermal'), ('Sub cutaneous', 'Sub cutaneous'), ('Intra muscular', 'Intra muscular'), ('Nasal', 'Nasal')], max_length=100)),
                ('vac_site', models.TextField(blank=True, null=True)),
                ('fd_vac', models.DateTimeField()),
                ('sc_vac', models.DateTimeField()),
                ('vac_adv_reacn', models.TextField(blank=True, null=True)),
                ('adv_reacn_test_rpt', models.TextField(blank=True, null=True)),
                ('rec_from_adv_reacn', models.CharField(choices=[('Emergency care', 'Emergency care'), ('Doctor consultation', 'Doctor consultation'), ('Primary health care', 'Primary health care'), ('No treatment sought', 'No treatment sought'), ('Hospitalisation', 'Hospitalisation')], max_length=100)),
                ('rec_from_adv_reacn_det', models.TextField(blank=True, null=True)),
                ('adv_reacn_trtmnt', models.CharField(choices=[('Emergency care', 'Emergency care'), ('Doctor consultation', 'Doctor consultation'), ('Primary health care', 'Primary health care'), ('No treatment sought', 'No treatment sought'), ('Hospitalisation', 'Hospitalisation')], max_length=100)),
                ('hospi_det', models.TextField(blank=True, null=True)),
                ('hospi_days', models.TextField(blank=True, null=True)),
                ('life_threat_oc', models.TextField(blank=True, null=True)),
                ('prolong_hospi', models.TextField(blank=True, null=True)),
                ('disability_perm_dam', models.TextField(blank=True, null=True)),
                ('congen_abnormal', models.TextField(blank=True, null=True)),
                ('prev_reacn_prev_vac', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('prev_reacn_prev_vac_det', models.TextField(blank=True, null=True)),
                ('ethic_bg', models.TextField(blank=True, null=True)),
            ],
        ),
    ]
